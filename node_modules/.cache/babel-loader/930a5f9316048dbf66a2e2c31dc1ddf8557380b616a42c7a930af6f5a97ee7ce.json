{"ast":null,"code":"export const getApiResourse = async url => {\n  try {\n    const res = await fetch(url);\n    if (!res.ok) {\n      console.error('Could not fetch', res.status);\n      return false;\n    }\n    return await res.json();\n  } catch (error) {\n    console.error('Could not fetch.', error.messege);\n    return false;\n  }\n};\nconst body = getApiResourse(SWAPI_ROOT + SWARI_PEOPLE).then(body => console.log(body))(async () => {\n  const body = getApiResourse(SWAPI_ROOT + SWARI_PEOPLE).then(body => console.log(body));\n})();\n// console.log(body);","map":{"version":3,"names":["getApiResourse","url","res","fetch","ok","console","error","status","json","messege","body","SWAPI_ROOT","SWARI_PEOPLE","then","log"],"sources":["C:/Users/Lenovo/Desktop/star_wars/src/utils/network.js"],"sourcesContent":["\r\n export const getApiResourse =async (url) => {\r\n     try {\r\n         const res = await fetch(url);\r\n         if (!res.ok) {\r\n             console.error('Could not fetch', res.status);\r\n             return false\r\n         }\r\n         return await res.json();\r\n     } catch (error) {\r\n         console.error('Could not fetch.', error.messege);\r\n         return false\r\n   }\r\n   \r\n} \r\nconst body = getApiResourse(SWAPI_ROOT + SWARI_PEOPLE)\r\n    .then(body => console.log(body))\r\n\r\n    (async () => {\r\n        const body = getApiResourse(SWAPI_ROOT + SWARI_PEOPLE)\r\n            .then(body => console.log(body))\r\n    })();\r\n// console.log(body);"],"mappings":"AACC,OAAO,MAAMA,cAAc,GAAE,MAAOC,GAAG,IAAK;EACxC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IAC5B,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE;MACTC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEJ,GAAG,CAACK,MAAM,CAAC;MAC5C,OAAO,KAAK;IAChB;IACA,OAAO,MAAML,GAAG,CAACM,IAAI,EAAE;EAC3B,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACG,OAAO,CAAC;IAChD,OAAO,KAAK;EAClB;AAEH,CAAC;AACD,MAAMC,IAAI,GAAGV,cAAc,CAACW,UAAU,GAAGC,YAAY,CAAC,CACjDC,IAAI,CAACH,IAAI,IAAIL,OAAO,CAACS,GAAG,CAACJ,IAAI,CAAC,CAAC,CAE/B,YAAY;EACT,MAAMA,IAAI,GAAGV,cAAc,CAACW,UAAU,GAAGC,YAAY,CAAC,CACjDC,IAAI,CAACH,IAAI,IAAIL,OAAO,CAACS,GAAG,CAACJ,IAAI,CAAC,CAAC;AACxC,CAAC,CAAC,EAAE;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}